version: '3.8'

services:
  # Main CronPilot application (production)
  cronpilot:
    build: .
    container_name: cronpilot-app
    ports:
      - "127.0.0.1:7000:7000"  # Bind to localhost only
    environment:
      - PYTHONPATH=/app
      - TZ=UTC
      - PYTHONOPTIMIZE=1
    volumes:
      # Mount tasks directory for easy task management
      - ./tasks:/app/tasks:ro
      # Mount logs directory for persistent logging
      - ./logs:/app/logs
      # Mount config for easy configuration changes
      - ./config.yaml:/app/config.yaml:ro
      # Mount database for persistence
      - cronpilot_data:/app
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - cronpilot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # PostgreSQL database (production)
  postgres:
    image: postgres:15-alpine
    container_name: cronpilot-postgres
    environment:
      POSTGRES_DB: cronpilot
      POSTGRES_USER: cronpilot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cronpilot_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - cronpilot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cronpilot"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Nginx reverse proxy (production)
  nginx:
    image: nginx:alpine
    container_name: cronpilot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - cronpilot
    restart: unless-stopped
    networks:
      - cronpilot-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

volumes:
  cronpilot_data:
    driver: local
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  cronpilot-network:
    driver: bridge
